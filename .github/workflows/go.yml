name: Go Multiplatform Build

on: push

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, 386]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.1'

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Build
      run: |
        OUTPUT_EXT=""
        if [[ "${{ matrix.goos }}" == "windows" ]]; then
          OUTPUT_EXT=".exe"
        fi
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o build/hello-${{ matrix.goos }}-${{ matrix.goarch }}$OUTPUT_EXT ./...

    - name: Test
      run: go test -v ./...

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: hello-${{ matrix.goos }}-${{ matrix.goarch }}
        path: build/

  secscan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.23.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          vuln-type: 'library'
